package controlador;

import bd.DAOUsuarios;
import constructores.Usuario;
import enumeraciones.TipoUsuario;
import util.MiExcepcion;
import vista.administrador.VistaAdministrador;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;

public class ControladorUsuario {

    private final VistaAdministrador vista;
    private final DAOUsuarios daoUsuarios;

    public ControladorUsuario(VistaAdministrador vista) {
        this.vista = vista;
        this.daoUsuarios = new DAOUsuarios();

        this.vista.getBotonCrear().addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                crearUsuario();
            }
        });

        this.vista.getBotonBuscar().addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                buscarUsuario();
            }
        });

        cargarUsuariosEnTabla();
    }

    private void crearUsuario() {
        String nombre = vista.getCampoUsuario().getText().trim();
        String contrasena = new String(vista.getCampoContrasena().getPassword()).trim();
        TipoUsuario tipoSeleccionado = (TipoUsuario) vista.getComboTipoUsuario().getSelectedItem();

        if (nombre.isEmpty() || contrasena.isEmpty()) {
            JOptionPane.showMessageDialog(vista, "Rellena todos los campos", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            dao.crearUsuario(new Usuario(nombre, contrasena, tipoSeleccionado));
            limpiarFormulario();
            cargarUsuariosEnTabla();
        } catch (MiExcepcion ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(vista, "Error al crear usuario: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void buscarUsuario() {
        String texto = vista.getCampoBuscar().getText().trim().toLowerCase();

        try {
            List<Usuario> lista = dao.listarUsuarios();
            DefaultTableModel modelo = vista.getModeloTabla();
            modelo.setRowCount(0);

            for (Usuario u : lista) {
                if (u.getNombre().toLowerCase().contains(texto)) {
                    modelo.addRow(new Object[]{u.getNombre(), u.getTipoUsuario().getDescripcionUsuario()});
                }
            }
        } catch (MiExcepcion e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(vista, "Error al buscar usuario: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void cargarUsuariosEnTabla() {
        try {
            List<Usuario> lista = dao.listarUsuarios();
            DefaultTableModel modelo = vista.getModeloTabla();
            modelo.setRowCount(0);

            for (Usuario u : lista) {
                modelo.addRow(new Object[]{u.getNombre(), u.getTipoUsuario().getDescripcionUsuario()});
            }
        } catch (MiExcepcion e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(vista, "Error al cargar usuarios: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void limpiarFormulario() {
        vista.getCampoUsuario().setText("");
        vista.getCampoContrasena().setText("");
        vista.getComboTipoUsuario().setSelectedIndex(0);
    }
}