package bd;

import constructores.Usuario;
import enumeraciones.TipoUsuario;
import util.Contrasena;
import util.MiExcepcion;

import java.sql.*;
import java.util.ArrayList;
import java.util.List;

public class DAOUsuarios {

    /**
     * MÃ©todo para crear un usuario nuevo
     * @throws MiExcepcion 
     */
    public boolean crearUsuario(Usuario usuario) throws MiExcepcion {
        String sql = "INSERT INTO usuarios (nombreUsuario, contrasena, tipo) VALUES (?, ?, ?)";

        try (Connection con = BDConnection.getConnection();
             PreparedStatement ps = con.prepareStatement(sql)) {

            ps.setString(1, usuario.getNombre());
            ps.setString(2, usuario.getPassword());
            ps.setString(3, usuario.getTipoUsuario().name());

            return ps.executeUpdate() > 0;

        } catch (SQLException | ClassNotFoundException e) {
            System.err.println("Error al insertar usuario: " + e.getMessage());
            return false;
        }
    }

    /**
     * Buscar un usuario por nombre (para login)
     */
    public Usuario buscarUsuario(String nombre) throws MiExcepcion {
        String sql = "SELECT idUsuario, nombreUsuario, contrasena, tipo FROM usuarios WHERE nombreUsuario = ?";

        try (Connection con = BDConnection.getConnection();
             PreparedStatement ps = con.prepareStatement(sql)) {

            ps.setString(1, nombre);

            try (ResultSet rs = ps.executeQuery()) {
                if (rs.next()) {
                    int id = rs.getInt("idUsuario");
                    String password = rs.getString("contrasena");
                    String tipo = rs.getString("tipo");

                    return new Usuario(id, nombre, Contrasena.descifrar(password), TipoUsuario.valueOf(tipo));
                }
            }

        } catch (SQLException | ClassNotFoundException e) {
            e.printStackTrace();
            throw new MiExcepcion("Error al buscar usuario: " + e.getMessage());
        }

        return null;
    }

    /**
     * Listar todos los usuarios (para la vista de admin)
     */
    public List<Usuario> listarUsuarios() throws MiExcepcion {
        List<Usuario> lista = new ArrayList<>();
        String sql = "SELECT idUsuario, nombreUsuario, contrasena, tipo FROM usuarios";

        try (Connection con = BDConnection.getConnection();
             PreparedStatement stmt = con.prepareStatement(sql);
             ResultSet rs = stmt.executeQuery()) {

            while (rs.next()) {
                int id = rs.getInt("idUsuario");
                String nombre = rs.getString("nombreUsuario");
                String password = rs.getString("contrasena");
                String tipo = rs.getString("tipo");

                Usuario usuario = new Usuario(id, nombre, password, TipoUsuario.valueOf(tipo));
                lista.add(usuario);
            }

        } catch (SQLException | ClassNotFoundException e) {
            e.printStackTrace();
            throw new MiExcepcion("Error al listar usuarios: " + e.getMessage());
        }

        return lista;
    }
}
