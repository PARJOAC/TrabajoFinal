package vista;

import java.io.Serializable;
import javax.swing.*;

import controlador.ControladorCajero;
import controlador.ControladorFactura;
import controlador.ControladorProducto;
import controlador.ControladorUsuario;
import constructores.Usuario;
import util.MiExcepcion;
import vista.administrador.VistaAdministrador;
import vista.cajero.VistaCajeros;

/**
 * Clase que lanza la vista correspondiente según el tipo de usuario que ha iniciado sesión.
 * Se utiliza como punto de entrada tras un login exitoso.
 */
public class VistaSegunUsuario implements Serializable {

	private static final long serialVersionUID = 1L;

	/**
	 * Constructor: identifica el tipo de usuario y lanza la vista adecuada.
	 *
	 * @param usuario Usuario autenticado
	 * @throws MiExcepcion Si ocurre un error en la inicialización de controladores o vistas
	 */
	public VistaSegunUsuario(Usuario usuario) throws MiExcepcion {
		switch (usuario.getTipoUsuario()) {

			// Si el usuario es administrador, se carga la vista de administración completa
			case Administrador:
				VistaAdministrador vistaAdministrador = new VistaAdministrador();

				// Se asignan sus controladores (usuarios, productos y facturas)
				new ControladorUsuario(vistaAdministrador);
				new ControladorProducto(vistaAdministrador);
				new ControladorFactura(vistaAdministrador);
				break;

			// Si el usuario es cajero, se carga su vista limitada
			case Cajero:
				VistaCajeros vistaCajero = new VistaCajeros();

				// Se le pasa su ID como responsable de facturación
				new ControladorCajero(vistaCajero, usuario.getId());
				break;

			// Si el tipo de usuario no es válido
			default:
				JOptionPane.showMessageDialog(null, "No se ha reconocido el tipo de usuario.", "Error", JOptionPane.ERROR_MESSAGE);
				System.exit(1); // Finaliza el programa
		}
	}
}
