package vista;

import javax.swing.*;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

import controlador.ControladorAdministrador;
import controlador.ControladorTema;

import java.awt.*;
import java.io.Serializable;

import enumeraciones.TipoUsuario;
import util.Logotipo;
import enumeraciones.Categoria;
import enumeraciones.Marca;

/**
 * Vista principal del panel de administración. Contiene pestañas para gestionar
 * usuarios, productos y facturas.
 */
public class VistaAdministrador extends JFrame implements Serializable {

	private static final long serialVersionUID = -6794774780948015355L;

	// Componentes generales
	private final JTabbedPane pestanas;

	// Componentes para la pestaña de usuarios
	private final JTextField campoUsuario;
	private final JPasswordField campoContrasena;
	private final JButton botonCrear;
	private final JTable tablaUsuarios;
	private JTextField campoBuscar;
	private final DefaultTableModel modeloTabla;
	private final JComboBox<TipoUsuario> comboTipoUsuario;
	private final JButton botonBuscar;

	// Componentes para la pestaña de productos
	private JTable tablaProductos;
	private DefaultTableModel modeloProductos;
	private JTextField campoNombreProducto, campoPrecioProducto, campoUnidadesProducto, campoFechaProducto;
	private JComboBox<Categoria> comboCategoriaProducto;
	private JComboBox<Marca> comboMarcaProducto;
	private JCheckBox checkEnVenta;
	private JButton botonAgregarProducto, botonModificarProducto, botonEliminarProducto;

	// Componentes para la pestaña de facturas
	private JTable tablaFacturas;
	private DefaultTableModel modeloFacturas;

	/**
	 * Constructor: inicializa toda la interfaz gráfica.
	 */
	@SuppressWarnings("serial")
	public VistaAdministrador() {
		// Añadir el logo a la cabecera de la pestaña
		setIconoVentana();

		setTitle("Panel de Administración");
		setDefaultCloseOperation(EXIT_ON_CLOSE);
		setSize(new Dimension(1400, 900));
		setLocationRelativeTo(null); // Centrado en pantalla

		pestanas = new JTabbedPane();
		add(pestanas);

		// Configuración de campos de usuario
		campoUsuario = new JTextField(16);
		campoUsuario.setHorizontalAlignment(JTextField.CENTER);

		campoContrasena = new JPasswordField(16);
		campoContrasena.setHorizontalAlignment(JTextField.CENTER);

		comboTipoUsuario = new JComboBox<>(TipoUsuario.values());

		botonCrear = new JButton("Crear usuario");
		botonBuscar = new JButton("Buscar");

		modeloTabla = new DefaultTableModel() {
			@Override
			public boolean isCellEditable(int row, int column) {
				return false; // No se pueden editar
			}
		};

		modeloTabla.addColumn("Usuario");
		modeloTabla.addColumn("Tipo de Usuario");

		tablaUsuarios = new JTable(modeloTabla);

		// Método que construye las tres pestañas principales y las añade al contenedor
		// principal

		try {
			crearPestanasAdministrador();
		} catch (Exception e) {
			System.out.println(e.getMessage());
		}
		getRootPane().setDefaultButton(botonCrear); // Enter = botón crear
	}

	/**
	 * Establecer el icono de la ventana
	 */
	private void setIconoVentana() {
		Image imagen = Logotipo.logotipoCabecera(this);
		if (imagen != null) {
			setIconImage(imagen);
		}
	}

	/**
	 * Método que construye y añade las pestañas principales al JTabbedPane.
	 */
	private void crearPestanasAdministrador() {
		campoBuscar = new JTextField();
		pestanas.add("Almacén", construirPestanaProductos());
		pestanas.add("Facturas", construirPestanaFacturas());
		pestanas.add("Usuarios", construirPestanaUsuarios());
	}

	/**
	 * Crea el panel de la pestaña "Usuarios" con formulario y tabla de resultados.
	 */
	private JPanel construirPestanaUsuarios() {
		JPanel panelUsuarios = new JPanel(new BorderLayout());
		panelUsuarios.add(construirFormulario(), BorderLayout.NORTH);
		panelUsuarios.add(new JScrollPane(tablaUsuarios), BorderLayout.CENTER);

		JPanel panelBusqueda = new JPanel(new FlowLayout(FlowLayout.RIGHT));
		panelBusqueda.add(new JLabel("Buscar:"));
		panelBusqueda.add(campoBuscar);
		panelBusqueda.add(botonBuscar);

		panelUsuarios.add(panelBusqueda, BorderLayout.SOUTH);
		return panelUsuarios;
	}

	/**
	 * Construye el formulario de creación de usuarios con GridBagLayout.
	 */
	private JPanel construirFormulario() {
		JPanel panel = new JPanel(new FlowLayout());

		String[] label = { "Usuario:", "Contraseña:", "Tipo de usuario:" };
		Component[] campos = { campoUsuario, campoContrasena, comboTipoUsuario };
		for(int i = 0; i < label.length; i++) {
			panel.add(new JLabel(label[i]));
			panel.add(campos[i]);
		}

		JPanel panelBoton = new JPanel(new FlowLayout());
		panelBoton.add(botonCrear);
		panel.add(panelBoton);

		return panel;
	}

	/**
	 * Crea la pestaña "Productos" con tabla, formulario de entrada y botones de
	 * acción.
	 */
	@SuppressWarnings("serial")
	private JPanel construirPestanaProductos() {
		JPanel panel = new JPanel(new BorderLayout());

		// Columnas de la tabla
		String[] columnas = { "ID", "Nombre", "Precio", "Unidades", "Fecha Cad.", "Categoría", "Marca", "En venta" };
		modeloProductos = new DefaultTableModel() {
			@Override
			public boolean isCellEditable(int row, int column) {
				return false;
			}
		};
		modeloProductos.setColumnIdentifiers(columnas);

		tablaProductos = new JTable(modeloProductos);
		panel.add(new JScrollPane(tablaProductos), BorderLayout.CENTER);

		// Formulario de producto
		JPanel form = new JPanel(new GridLayout(4, 4, 10, 10));
		form.setBorder(BorderFactory.createTitledBorder("Gestión de Producto"));

		// Etiquetas y campos
		String[] etiquetas = { "Nombre:", "Precio:", "Unidades:", "Fecha Caducidad (DD/MM/YYYY):" };
		JTextField[] campos = new JTextField[etiquetas.length];
		Component[] componentes = {campoNombreProducto, campoPrecioProducto, campoUnidadesProducto, campoFechaProducto};

		for (int i = 0; i < etiquetas.length; i++) {
			form.add(new JLabel(etiquetas[i]));
			campos[i] = new JTextField();
			form.add(campos[i]);
			componentes[i] = campos[i];
		}

		// Campos combo y checkbox
		comboCategoriaProducto = new JComboBox<>(Categoria.values());
		comboMarcaProducto = new JComboBox<>(Marca.values());
		checkEnVenta = new JCheckBox("", true);

		form.add(new JLabel("Categoría:"));
		form.add(comboCategoriaProducto);
		form.add(new JLabel("Marca:"));
		form.add(comboMarcaProducto);
		form.add(new JLabel("¿Se vende?"));
		form.add(checkEnVenta);

		// Botones
		String[] textosBotones = { "Añadir producto", "Modificar producto", "Eliminar producto" };
		Component[] componentesProductos = { botonAgregarProducto, botonModificarProducto, botonEliminarProducto };
		JButton[] botones = new JButton[textosBotones.length];
		
		JPanel panelBotones = new JPanel(new FlowLayout());
		for (int i = 0; i < textosBotones.length; i++) {
			botones[i] = new JButton(textosBotones[i]);
			panelBotones.add(botones[i]);
			componentesProductos[i] = botones[i];
		}

		// Componer zona inferior
		JPanel zonaInferior = new JPanel(new BorderLayout());
		zonaInferior.add(form, BorderLayout.CENTER);
		zonaInferior.add(panelBotones, BorderLayout.SOUTH);

		panel.add(zonaInferior, BorderLayout.SOUTH);
		return panel;
	}

	/**
	 * Crea la pestaña "Facturas", mostrando una tabla con el historial de compras.
	 */
	@SuppressWarnings("serial")
	private JPanel construirPestanaFacturas() {
		JPanel panel = new JPanel(new BorderLayout());

		String[] columas = { "ID Factura", "Usuario", "Total", "Efectivo", "Cambio", "Fecha" };
		modeloFacturas = new DefaultTableModel() {
			@Override
			public boolean isCellEditable(int row, int column) {
				return false;
			}
		};
		modeloFacturas.setColumnIdentifiers(columas);

		tablaFacturas = new JTable(modeloFacturas);

		JScrollPane scroll = new JScrollPane(tablaFacturas);
		
		panel.add(scroll, BorderLayout.CENTER);
		return panel;
	}

	// Getters
	// Usuarios
	public JTextField getCampoUsuario() {return campoUsuario;}
	public JPasswordField getCampoContrasena() {return campoContrasena;}
	public JButton getBotonCrear() {return botonCrear;}
	public JTable getTablaUsuarios() {return tablaUsuarios;}
	public JTextField getCampoBuscar() {return campoBuscar;}
	public DefaultTableModel getModeloTabla() {return modeloTabla;}
	public JComboBox<TipoUsuario> getComboTipoUsuario() {return comboTipoUsuario;}
	public JButton getBotonBuscar() {return botonBuscar;}

	// Productos
	public JTable getTablaProductos() {return tablaProductos;}
	public DefaultTableModel getModeloProductos() {return modeloProductos;}
	public JTextField getCampoNombreProducto() {return campoNombreProducto;}
	public JTextField getCampoPrecioProducto() {return campoPrecioProducto;}
	public JTextField getCampoUnidadesProducto() {return campoUnidadesProducto;}
	public JTextField getCampoFechaProducto() {return campoFechaProducto;}
	public JComboBox<Categoria> getComboCategoriaProducto() {return comboCategoriaProducto;}
	public JComboBox<Marca> getComboMarcaProducto() {return comboMarcaProducto;}
	public JCheckBox getCheckEnVenta() {return checkEnVenta;}
	public JButton getBotonAgregarProducto() {return botonAgregarProducto;}
	public JButton getBotonModificarProducto() {return botonModificarProducto;}
	public JButton getBotonEliminarProducto() {return botonEliminarProducto;}

	// Facturas
	public JTable getTablaFacturas() {return tablaFacturas;}
	public DefaultTableModel getModeloFacturas() {return modeloFacturas;}
	
	public void controlAdministrador(ControladorAdministrador ctr, ControladorTema ctrTema) {
		// Controlador de Administrador
		botonCrear.addActionListener(ctr);
		botonBuscar.addActionListener(ctr);
		botonAgregarProducto.addActionListener(ctr);
		botonModificarProducto.addActionListener(ctr);
		botonEliminarProducto.addActionListener(ctr);
		tablaProductos.getSelectionModel().addListSelectionListener(ctr);
		
		addKeyListener(ctrTema);
		setFocusable(true);
	}
	
}
