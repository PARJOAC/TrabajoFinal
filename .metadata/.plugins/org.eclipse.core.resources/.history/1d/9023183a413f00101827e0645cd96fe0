package controlador;

import bd.DAOUsuarios;
import constructores.Usuario;
import enumeraciones.TipoUsuario;
import util.MiExcepcion;
import vista.administrador.VistaAdministrador;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;

/**
 * Controlador que gestiona la lógica relacionada con los usuarios
 * en la vista del administrador. Permite crear, buscar y listar usuarios.
 */
public class ControladorUsuario {

    private final VistaAdministrador vista;   // Vista que contiene los componentes de usuarios
    private final DAOUsuarios daoUsuarios;   // DAO para operaciones con la tabla de usuarios

    /**
     * Constructor. Enlaza los botones con sus acciones y carga los usuarios.
     *
     * @param vista vista del administrador
     */
    public ControladorUsuario(VistaAdministrador vista) {
        this.vista = vista;
        this.daoUsuarios = new DAOUsuarios();

        // Asignar eventos a botones de la vista
        this.vista.getBotonCrear().addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                crearUsuario(); // Acción para crear nuevo usuario
            }
        });

        this.vista.getBotonBuscar().addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                buscarUsuario(); // Acción para buscar usuario por nombre
            }
        });

        // Carga inicial de la tabla de usuarios
        cargarUsuariosEnTabla();
    }

    /**
     * Crea un nuevo usuario a partir de los campos del formulario.
     * Muestra errores si faltan datos o ocurre un problema al guardar.
     */
    private void crearUsuario() {
        // Obtener valores del formulario
        String nombre = vista.getCampoUsuario().getText().trim();
        String contrasena = new String(vista.getCampoContrasena().getPassword()).trim();
        TipoUsuario tipoSeleccionado = (TipoUsuario) vista.getComboTipoUsuario().getSelectedItem();

        // Validar campos obligatorios
        if (nombre.isEmpty() || contrasena.isEmpty()) {
            JOptionPane.showMessageDialog(vista, "Rellena todos los campos", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            // Crear y guardar nuevo usuario
            daoUsuarios.crearUsuario(new Usuario(nombre, contrasena, tipoSeleccionado));
            limpiarFormulario();      // Limpiar los campos
            cargarUsuariosEnTabla();  // Actualizar tabla
        } catch (MiExcepcion ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(vista, "Error al crear usuario: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * Filtra la tabla de usuarios mostrando solo aquellos que coincidan con el texto buscado.
     */
    private void buscarUsuario() {
        String texto = vista.getCampoBuscar().getText().trim().toLowerCase(); // Texto introducido por el usuario

        try {
            List<Usuario> lista = daoUsuarios.listarUsuarios();               // Obtener lista completa
            DefaultTableModel modelo = vista.getModeloTabla();
            modelo.setRowCount(0);                                            // Limpiar tabla

            // Añadir solo los que contienen el texto buscado
            for (Usuario u : lista) {
                if (u.getNombre().toLowerCase().contains(texto)) {
                    modelo.addRow(new Object[]{u.getNombre(), u.getTipoUsuario().getDescripcionUsuario()});
                }
            }
        } catch (MiExcepcion e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(vista, "Error al buscar usuario: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * Carga todos los usuarios disponibles y los muestra en la tabla.
     */
    private void cargarUsuariosEnTabla() {
        try {
            List<Usuario> lista = daoUsuarios.listarUsuarios();              // Consulta todos los usuarios
            DefaultTableModel modelo = vista.getModeloTabla();
            modelo.setRowCount(0);                                           // Vacía la tabla antes de rellenarla

            for (Usuario u : lista) {
                modelo.addRow(new Object[]{u.getNombre(), u.getTipoUsuario().getDescripcionUsuario()});
            }
        } catch (MiExcepcion e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(vista, "Error al cargar usuarios: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * Limpia los campos del formulario de usuario.
     */
    private void limpiarFormulario() {
        vista.getCampoUsuario().setText("");
        vista.getCampoContrasena().setText("");
        vista.getComboTipoUsuario().setSelectedIndex(0);
    }
}
