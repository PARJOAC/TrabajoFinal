package vista;

import javax.swing.*;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.io.Serializable;
import java.net.URL;

import enumeraciones.TipoUsuario;
import enumeraciones.Categoria;
import enumeraciones.Marca;

/**
 * Vista principal del panel de administración. Contiene pestañas para gestionar
 * usuarios, productos y facturas.
 */
public class VistaAdministrador extends JFrame implements Serializable {

	private static final long serialVersionUID = -6794774780948015355L;

	// Componentes generales
	private final JTabbedPane pestanas;

	// Componentes para la pestaña de usuarios
	private final JTextField campoUsuario;
	private final JPasswordField campoContrasena;
	private final JButton botonCrear;
	private final JTable tablaUsuarios;
	private JTextField campoBuscar;
	private final DefaultTableModel modeloTabla;
	private final JComboBox<TipoUsuario> comboTipoUsuario;
	private final JButton botonBuscar;

	// Componentes para la pestaña de productos
	private JTable tablaProductos;
	private DefaultTableModel modeloProductos;
	private JTextField campoNombreProducto, campoPrecioProducto, campoUnidadesProducto, campoFechaProducto,
			campoDescripcionProducto;
	private JComboBox<Categoria> comboCategoriaProducto;
	private JComboBox<Marca> comboMarcaProducto;
	private JCheckBox checkEnVenta;
	private JButton botonAgregarProducto, botonModificarProducto, botonEliminarProducto;

	// Componentes para la pestaña de facturas
	private JTable tablaFacturas;
	private DefaultTableModel modeloFacturas;

	/**
	 * Constructor: inicializa toda la interfaz gráfica.
	 */
	@SuppressWarnings("serial")
	public VistaAdministrador() {
		//Añadir el logo a la cabecera de la pestaña
		URL ruta = getClass().getResource("/logos/logoCabecera.png");
		Image imagenEscalada = null;
		if (ruta != null) {
			ImageIcon icono = new ImageIcon(ruta);
			imagenEscalada = icono.getImage();
		}
		setIconImage(imagenEscalada);
		
		setTitle("Panel de Administración");
		setDefaultCloseOperation(EXIT_ON_CLOSE);
		setSize(new Dimension(1400, 900));
		setExtendedState(MAXIMIZED_BOTH);
		setLocationRelativeTo(null); // Centrado en pantalla

		pestanas = new JTabbedPane();
		add(pestanas);

		// Configuración de campos de usuario
		campoUsuario = new JTextField(16);
		campoUsuario.setHorizontalAlignment(JTextField.CENTER);

		campoContrasena = new JPasswordField(16);
		campoContrasena.setHorizontalAlignment(JTextField.CENTER);

		comboTipoUsuario = new JComboBox<>(TipoUsuario.values());
		
		botonCrear = new JButton("Crear usuario");
		botonBuscar = new JButton("Buscar");

		modeloTabla = new DefaultTableModel() {
			@Override
			public boolean isCellEditable(int row, int column) {
				return false; // No se pueden editar
			}
		};
		modeloTabla.addColumn("Usuario");
		modeloTabla.addColumn("Tipo de Usuario");

		tablaUsuarios = new JTable(modeloTabla);
		tablaUsuarios.setRowHeight(25);
		centrarColumnas(tablaUsuarios);

		// Método que construye las tres pestañas principales y las añade al contenedor
		// principal

		try {
			crearPestanasAdministrador();
		} catch (Exception e) {
			System.out.println(e.getMessage());
		}
		getRootPane().setDefaultButton(botonCrear); // Enter = botón crear
		setVisible(true);
	}

	/**
	 * Método que construye y añade las pestañas principales al JTabbedPane.
	 */
	private void crearPestanasAdministrador() {
		campoBuscar = new JTextField(20);
		pestanas.add("Almacén", construirPestanaProductos());
		pestanas.add("Facturas", construirPestanaFacturas());
		pestanas.add("Usuarios", construirPestanaUsuarios());
	}

	/**
	 * Crea el panel de la pestaña "Usuarios" con formulario y tabla de resultados.
	 */
	private JPanel construirPestanaUsuarios() {
		JPanel panelUsuarios = new JPanel(new BorderLayout());
		panelUsuarios.add(construirFormulario(), BorderLayout.NORTH);
		panelUsuarios.add(new JScrollPane(tablaUsuarios), BorderLayout.CENTER);

		JPanel panelBusqueda = new JPanel(new FlowLayout(FlowLayout.RIGHT));
		panelBusqueda.add(new JLabel("Buscar:"));
		panelBusqueda.add(campoBuscar);
		panelBusqueda.add(botonBuscar);

		panelUsuarios.add(panelBusqueda, BorderLayout.SOUTH);
		return panelUsuarios;
	}

	/**
	 * Construye el formulario de creación de usuarios con GridBagLayout.
	 */
	private JPanel construirFormulario() {
		JPanel panel = new JPanel(new GridBagLayout());
		panel.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));

		GridBagConstraints gbc = new GridBagConstraints();
		gbc.insets = new Insets(8, 8, 8, 8);
		gbc.gridx = 0;
		gbc.anchor = GridBagConstraints.CENTER;
		gbc.fill = GridBagConstraints.HORIZONTAL;

		panel.add(new JLabel("Usuario:"), gbc);
		panel.add(campoUsuario, gbc);
		panel.add(new JLabel("Contraseña:"), gbc);
		panel.add(campoContrasena, gbc);
		panel.add(new JLabel("Tipo de usuario:"), gbc);
		panel.add(comboTipoUsuario, gbc);

		JPanel panelBoton = new JPanel(new FlowLayout(FlowLayout.CENTER));
		panelBoton.add(botonCrear);
		panel.add(panelBoton, gbc);

		return panel;
	}

	/**
	 * Crea la pestaña "Productos" con tabla, formulario de entrada y botones de
	 * acción.
	 */
	@SuppressWarnings("serial")
	private JPanel construirPestanaProductos() {
		JPanel panel = new JPanel(new BorderLayout());

		// Columnas de la tabla
		String[] columnas = { "ID", "Nombre", "Precio", "Unidades", "Fecha Cad.", "Categoría", "Marca", "En venta",
				"Descripción" };
		modeloProductos = new DefaultTableModel() {
			@Override
			public boolean isCellEditable(int row, int column) {
				return false;
			}
		};
		modeloProductos.setColumnIdentifiers(columnas);

		tablaProductos = new JTable(modeloProductos);
		centrarColumnas(tablaProductos);
		panel.add(new JScrollPane(tablaProductos), BorderLayout.CENTER);

		// Formulario de producto
		JPanel form = new JPanel(new GridLayout(4, 4, 10, 10));
		form.setBorder(BorderFactory.createTitledBorder("Gestión de Producto"));

		// Etiquetas y campos
		String[] etiquetas = { "Nombre:", "Precio:", "Unidades:", "Fecha Caducidad (DD/MM/YYYY):", "Descripción:" };
		JTextField[] campos = new JTextField[etiquetas.length];

		for (int i = 0; i < etiquetas.length; i++) {
			form.add(new JLabel(etiquetas[i]));
			campos[i] = new JTextField();
			form.add(campos[i]);
		}

		// Asignar a atributos
		campoNombreProducto = campos[0];
		campoPrecioProducto = campos[1];
		campoUnidadesProducto = campos[2];
		campoFechaProducto = campos[3];
		campoDescripcionProducto = campos[4];

		// Campos combo y checkbox
		comboCategoriaProducto = new JComboBox<>(Categoria.values());
		comboMarcaProducto = new JComboBox<>(Marca.values());
		checkEnVenta = new JCheckBox("En venta", true);

		form.add(new JLabel("Categoría:"));
		form.add(comboCategoriaProducto);
		form.add(new JLabel("Marca:"));
		form.add(comboMarcaProducto);
		form.add(new JLabel(""));
		form.add(checkEnVenta);

		// Botones
		String[] textosBotones = { "Añadir producto", "Modificar producto", "Eliminar producto" };
		JButton[] botones = new JButton[textosBotones.length];

		JPanel panelBotones = new JPanel(new FlowLayout());
		for (int i = 0; i < textosBotones.length; i++) {
			botones[i] = new JButton(textosBotones[i]);
			panelBotones.add(botones[i]);
		}

		// Asignar a atributos
		botonAgregarProducto = botones[0];
		botonModificarProducto = botones[1];
		botonEliminarProducto = botones[2];

		// Componer zona inferior
		JPanel zonaInferior = new JPanel(new BorderLayout());
		zonaInferior.add(form, BorderLayout.CENTER);
		zonaInferior.add(panelBotones, BorderLayout.SOUTH);

		panel.add(zonaInferior, BorderLayout.SOUTH);
		return panel;
	}

	/**
	 * Crea la pestaña "Facturas", mostrando una tabla con el historial de compras.
	 */
	@SuppressWarnings("serial")
	private JPanel construirPestanaFacturas() {
		JPanel panel = new JPanel(new BorderLayout());

		String[] columas = { "ID Factura", "Usuario", "Total", "IVA", "Efectivo", "Cambio", "Fecha" };
		modeloFacturas = new DefaultTableModel() {
			@Override
			public boolean isCellEditable(int row, int column) {
				return false;
			}
		};
		modeloFacturas.setColumnIdentifiers(columas);

		tablaFacturas = new JTable(modeloFacturas);
		centrarColumnas(tablaFacturas);

		JScrollPane scroll = new JScrollPane(tablaFacturas);
		scroll.setBorder(BorderFactory.createTitledBorder("Historial de facturas"));

		panel.add(scroll, BorderLayout.CENTER);
		return panel;
	}

	/**
	 * Aplica alineación centrada a todas las columnas de una tabla dada.
	 */
	private void centrarColumnas(JTable tabla) {
		DefaultTableCellRenderer centro = new DefaultTableCellRenderer();
		centro.setHorizontalAlignment(SwingConstants.CENTER);
		for (int i = 0; i < tabla.getColumnCount(); i++) {
			tabla.getColumnModel().getColumn(i).setCellRenderer(centro);
		}
	}

	// GETTERS
	// Métodos públicos para acceder a los componentes desde los controladores

	// Usuarios
	public JTextField getCampoUsuario() {
		return campoUsuario;
	}

	public JPasswordField getCampoContrasena() {
		return campoContrasena;
	}

	public JButton getBotonCrear() {
		return botonCrear;
	}

	public JTable getTablaUsuarios() {
		return tablaUsuarios;
	}

	public JTextField getCampoBuscar() {
		return campoBuscar;
	}

	public DefaultTableModel getModeloTabla() {
		return modeloTabla;
	}

	public JComboBox<TipoUsuario> getComboTipoUsuario() {
		return comboTipoUsuario;
	}

	public JButton getBotonBuscar() {
		return botonBuscar;
	}

	// Productos
	public JTable getTablaProductos() {
		return tablaProductos;
	}

	public DefaultTableModel getModeloProductos() {
		return modeloProductos;
	}

	public JTextField getCampoNombreProducto() {
		return campoNombreProducto;
	}

	public JTextField getCampoPrecioProducto() {
		return campoPrecioProducto;
	}

	public JTextField getCampoUnidadesProducto() {
		return campoUnidadesProducto;
	}

	public JTextField getCampoFechaProducto() {
		return campoFechaProducto;
	}

	public JTextField getCampoDescripcionProducto() {
		return campoDescripcionProducto;
	}

	public JComboBox<Categoria> getComboCategoriaProducto() {
		return comboCategoriaProducto;
	}

	public JComboBox<Marca> getComboMarcaProducto() {
		return comboMarcaProducto;
	}

	public JCheckBox getCheckEnVenta() {
		return checkEnVenta;
	}

	public JButton getBotonAgregarProducto() {
		return botonAgregarProducto;
	}

	public JButton getBotonModificarProducto() {
		return botonModificarProducto;
	}

	public JButton getBotonEliminarProducto() {
		return botonEliminarProducto;
	}

	// Facturas
	public JTable getTablaFacturas() {
		return tablaFacturas;
	}

	public DefaultTableModel getModeloFacturas() {
		return modeloFacturas;
	}
}
